{-# STDLIB_VERSION 5 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let AINTID = fromBase58String("4PVEMfdqhwzpLAQjqgQ1Sys9agqBxtP8QEnAthSrLPfF")

@Callable(i)
func lockAint(address: String) = {
    let addr = if (address == "mobile") then toString(i.caller) else address
    let lockKey = "%s__" + addr
    let pmt = i.payments[0]
    let pmtAssetId = pmt.assetId.value()
    if (i.payments.size() != 1) then throw("exact 1 payment must be attached") else
    if (pmtAssetId != AINTID) then throw("only AINT can be used in payment") else
    let alreadyPaid = getInteger(lockKey).valueOrElse(0)
    let amount = alreadyPaid + i.payments[0].amount
    [IntegerEntry(lockKey, amount)]
}

@Callable(i)
func unlockAint(address: String, amount: Int) = {
    let addr = if (address == "mobile") then toString(i.caller) else address
    let lockKey = "%s__" + addr
    let total = getInteger(lockKey).valueOrElse(0)
    if (amount > total) then throw("amount is too big") else
    [
        IntegerEntry(lockKey, total - amount),
        ScriptTransfer(i.caller, amount,  AINTID)
    ]
}